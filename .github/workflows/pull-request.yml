name: Rust

on:
  pull_request

env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-test-native:

    strategy:
      matrix:
        platform: [ubuntu-latest]
    
    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v2
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
            toolchain: nightly
            override: true
            components: rustfmt, clippy

      # `cargo check` command here will use installed `nightly`
      # as it is set as an "override" for current directory

      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check
      
      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
      
      - name: Run cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
  
  lint:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2

        - name: Actions-rs
          uses: actions-rs/toolchain@v1
          with:
            toolchain: nightly
            override: true
        
        - name: Run Test
          uses: actions-rs/cargo@v1
          with:
            command: test
            args: --all-features --no-fail-fast
          env:
            CARGO_INCREMENTAL: '0'
            RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
            RUSTDOCFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
        
        - id: coverage
          uses: actions-rs/grcov@v0.1
        
        - name: Coveralls upload
          uses: coverallsapp/github-action@master
          with:
            github-token: ${{ secrets.GITHUB_TOKEN }}
            path-to-lcov: ${{ steps.coverage.outputs.report }}
